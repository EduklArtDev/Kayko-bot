import ytdl from '@distube/ytdl-core';
interface ResObterMidiaTwitter {
    resultado?: {
        texto: string;
        midias: {
            tipo: string;
            url: string;
        }[];
    };
    erro?: string;
}
export declare const obterMidiaTwitter: (url: string) => Promise<ResObterMidiaTwitter>;
interface ResObterMidiaTiktok {
    resultado?: {
        autor_perfil: string | undefined;
        descricao: string | undefined;
        tipo: string;
        duracao: number | null;
        url: string | string[];
    };
    erro?: string;
}
export declare const obterMidiaTiktok: (url: string) => Promise<ResObterMidiaTiktok>;
interface ResObterMidiaFacebook {
    resultado?: any;
    erro?: string;
}
export declare const obterMidiaFacebook: (url: string) => Promise<ResObterMidiaFacebook>;
interface ResObterMidiaInstagram {
    resultado?: {
        tipo: string;
        buffer: Buffer;
    }[];
    erro?: string;
}
export declare const obterMidiaInstagram: (url: string) => Promise<ResObterMidiaInstagram>;
interface ResObterInfoVideoYT {
    resultado?: {
        videoId: string;
        title: string;
        shortDescription: string;
        lengthSeconds: string;
        keywords?: string[];
        channelId: string;
        isOwnerViewing: boolean;
        isCrawlable: boolean;
        durationFormatted: string;
        format: ytdl.videoFormat;
    };
    erro?: string;
}
export declare const obterInfoVideoYT: (texto: string) => Promise<ResObterInfoVideoYT>;
interface ResObterYTMP4 {
    resultado?: Buffer;
    erro?: string;
}
export declare const obterYTMP4: (texto: string) => Promise<ResObterYTMP4>;
interface ResObterYTMP3 {
    resultado?: Buffer;
    erro?: string;
}
export declare const obterYTMP3: (texto: string) => Promise<ResObterYTMP3>;
export {};
