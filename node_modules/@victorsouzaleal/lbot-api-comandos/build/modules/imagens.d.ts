interface ResImagemUpload {
    resultado?: string;
    erro?: string;
}
export declare const imagemUpload: (bufferImagem: Buffer) => Promise<ResImagemUpload>;
interface ResMisturarEmojis {
    resultado?: Buffer;
    erro?: string;
}
export declare const misturarEmojis: (emoji1: string, emoji2: string) => Promise<ResMisturarEmojis>;
interface ResRemoverFundo {
    resultado?: Buffer;
    erro?: string;
}
export declare const removerFundo: (bufferImagem: Buffer) => Promise<ResRemoverFundo>;
interface ResAnimeInfo {
    resultado?: {
        tempoInicial: string;
        tempoFinal: string;
        episodio: string;
        titulo: string;
        similaridade: string;
        link_previa: string;
    };
    erro?: string;
}
export declare const obterAnimeInfo: (bufferImagem: Buffer) => Promise<ResAnimeInfo>;
interface ResObterImagens {
    resultado?: {
        id: string;
        url: string;
        width: number;
        height: number;
        color: number;
        preview: {
            url: string;
            width: number;
            height: number;
        };
        origin: {
            title: string;
            website: {
                name: string;
                domain: string;
                url: string;
            };
        };
    }[];
    erro?: string;
}
export declare const obterImagens: (texto: string) => Promise<ResObterImagens>;
export {};
